---
title: "rbtl - Data Visualisation"
author: "Lars Sch√∂bitz"
institute: "Global Health Engineering - ETH Zurich"
date: '
  `r Sys.Date()`'
format: 
  revealjs: 
    theme: [default, "../slides.scss"]
    chalkboard: true
editor: source
---

```{r}
#| child: "../setup.Rmd"
```

```{r}
library(ggplot2)
library(gapminder)
library(readr)
``` 

```{r}

gapminder_yr_2007 <- gapminder %>% 
  filter(year == 2007)

waste_gdp_data <- read_csv(file = here::here("slides/pt2-d11-data-visualisation/data/waste-generation-gdp-data.csv")) %>% 
  mutate(income_id = factor(income_id, 
                            levels = c("HIC", "UMC", "LMC", "LIC"))) 

waste_gdp_data_filter <- waste_gdp_data %>% 
  filter(capita_kg_year > 850 | 
           country_name == "Switzerland" |
           country_name == "Canada")

my_colors <- c("#ED6D37", "#901C6C", "#18A5C5", "#A6CE8F")

```

# Today

1. Research Project Report
2. Solving coding problems
3. Working collaboratively with git
    - Live Coding Exercise
4. Exploratory Data Analysis with `ggplot2`
    - Live Coding Exercise
    - Programming Exercise
5. Homework Assignment 11

# Learning Objectives

1. Learners can describe the four main aesthetic mappings that can be used to visualise data using the ggplot2 R Package
2. Learners can control the colour scaling applied to a plot using colour as an aesthetic mapping
3. Learners can compare three different geoms and their use case
4. Learners can apply a theme to control font types and sizes within a plot

# Research project report {background-color="#0F4C81"}

## GitHub issues / Slack

[TODO: List of aggregated questions and answers]

# Solving coding problems {background-color="#0F4C81"}

## Tipps for search engines 

- Use actionable verbs that describe what you want to do
- Be specific 
- Add R to the search query 
- Add the name of the R package name to the search query
- Scroll through the top 5 results (don't just pick the first)

**Example: "How to remove a legend from a plot in R ggplot2"**

## Stack Overflow

::: {.incremental}

:::: {.columns}

::: {.column width="47.5%"}

**What is it?**

- The biggest support network for (coding) problems 
- Can be initimidating at first
- Upvote system 

:::

::: {.column width="5%"}

:::

::: {.column width="47.5%"}

**Workflow**

- First, briefly read the question that was posted
- Then, read the answer marked as "correct"
- Then, read one or two more answers with high votes
- Then, check out the "Linked" posts 
- Always give credit for the solution

:::

::::

:::

## Give credit

![](img/stack-overflow-share-1.png)

## Give credit

![](img/stack-overflow-share-2.png)

## Give credit {.smaller}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "5-6"
ggplot(data = global_waste_data_kg_year,
       mapping = aes(x = income_id, 
                     y = capita_kg_year,
                     color = income_id)) +
  ## Remove legend ref: https://stackoverflow.com/a/35622358/6816220
  theme(legend.position = "none")

```

## Other sources for help

:::: {.columns}

::: {.column width="50%"}

- RStudio Community Forum: https://community.rstudio.com/
- Our rbtl Slack channel
- Documentation websites: https://dplyr.tidyverse.org/
- Twitter community: [#rstats](https://twitter.com/search?q=%23rstats&src=typd) 
:::

::: {.column width="50%"}

![](img/welcome_to_rstats_twitter.png)

:::

::::

::: aside
Artwork by [@allison_horst](https://www.allisonhorst.com/)
:::

## Minimal reproducible example (reprex)

- Needed when asking questions online
- We will practice this in another class
- Good support information: https://www.tidyverse.org/help/#reprex

## . {background-image="img/code_hero.jpg" background-size="contain"} 

::: aside
Artwork by [@allison_horst](https://www.allisonhorst.com/)
:::

# Working collaboratively with git {background-color="#0F4C81"}

## pull first, and push often

![](img/illustration-slides-week4.010.png)

## Live Coding Exercise

1. Open the repo for your team project report on RStudio Cloud
2. Open the file: `01-introduction.qmd`
3. Use your Sticky Notes to let me know when you are ready.

## Git help

You can find the merge conflict workflow documented in our git help document for the course:

[rbtl-fs22/git-help](https://github.com/rbtl-fs22/git-help){preview-link="true"}

The best online resource for working with git is:

[Happy Git and GitHub for the useR](https://happygitwithr.com/) by [Jenny Bryan](https://twitter.com/JennyBryan)

# Exploratory Data Analysis with `ggplot2` {background-color="#0F4C81"}

## R Package `ggplot2`

:::: {.columns}

::: {.column width="50%"}

- **ggplot2** is tidyverse's data visualization package 
- `gg` in `ggplot2` stands for Grammar of Graphics 
- Inspired by the book **Grammar of Graphics** by Leland Wilkinson
- **Documentation:** https://ggplot2.tidyverse.org/
- **Book**: https://ggplot2-book.org

:::

::: {.column width="50%"}

```{r}
knitr::include_graphics("img/ggplot2-part-of-tidyverse.png")
```

:::

::::

::: {.aside}

Slide adapted from datasciencebox.org

:::

## Code structure

- `ggplot()` is the main function in ggplot2
- Plots are constructed in layers
- Structure of the code for plots can be summarized as

```{r}
#| eval: false
#| echo: true

ggplot(data = [dataset], 
       mapping = aes(x = [x-variable], 
                     y = [y-variable])) +
   geom_xxx() +
   other options
```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot()
```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007)
```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes()) 

```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp))  

```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp)) +
  geom_boxplot() 

```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp)) +
  geom_boxplot() +
  theme_minimal()

```

## Code structure {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp)) +
  geom_boxplot() +
  theme_minimal(base_size = 14)

```

# Break

![](img/coffee-break.jpg)

```{r}

countdown(
  minutes = 15, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

::: aside
Photo by [Blake Wisz](https://unsplash.com/@blakewisz)
:::

## Live Coding Exercise - Goal

![](img/msw-generation-vs-gni-plot.png)

## Live Coding Exercise

**ae-11-data-science-lifecycle**

1. Head over to the GitHub Organisation for the course.
2. Find the repo for week 11 that has your GitHub username.
3. Clone the repo with your username to the RStudio Cloud.
4. Open the file: `ae-11a-data-visualisation.qmd`
5. Use your Sticky Notes to let me know when you are ready.

# Break

![](img/coffee-break.jpg)

```{r}

countdown(
  minutes = 10, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

::: aside
Photo by [Blake Wisz](https://unsplash.com/@blakewisz)
:::

## Live Coding Exercise - Result

```{r}

ggplot(data = waste_gdp_data,
       mapping = aes(x = gdp_capita, 
                     y = capita_kg_year)) +
  geom_point(size = 3, alpha = 3/4, 
             mapping = aes(color = income_id,
                           shape = income_id)) +
  geom_smooth(method = "lm", 
              se = FALSE, 
              color = "gray20", 
              linetype = "longdash") +
  geom_text(data = waste_gdp_data_filter,
            mapping = aes(label = country_name), 
            nudge_y = 50, size = 3) +
  
  # https://scales.r-lib.org/reference/label_log.html
  scale_x_log10(labels = scales::label_log(), limits = c(100, 150000))  +
  scale_y_continuous(breaks = seq(0, 1400, 200), limits = c(0, 1400)) +
  scale_color_manual(values = my_colors) +
  labs(title = "Municipal Solid Waste Generation",
       subtitle = "Increasing income results in greater solid waste generation",
       x = "GDP per capity (USD)",
       y = "MSW generation pert capity (kg/yr)",
       color = "Income categories",
       shape = "Income categories",
       caption = "Data: World Bank World Development Indicators and What a Waste Global Database."
  ) +
  theme_minimal(base_size = 8, base_family = "Arial") +
  theme(legend.position = c(0.20, 0.70),
        plot.title.position = "plot",
        plot.caption = element_text(face = "italic", color = "grey70"),
        legend.background = element_rect(fill = "white", colour = "grey50"),
        panel.grid.minor = element_blank()) 
```


# Visualising numerical data {background-color="#0F4C81"}

## Types of variables 

::: {.incremental}

:::: {.columns}

::: {.column width="50%"}

### numerical

**discrete variables**

- non-negative
- whole numbers
- e.g. number of students, roll of a dice

**continuous variables**

- infinite number of values
- also dates and times
- e.g. length, weight, size 

:::

::: {.column width="50%"}

### non-numerical

**categorical variables**

- finite number of values 
- distinct groups (e.g. EU countries, continents)
- **ordinal** if levels have natural ordering (e.g. week days, school grades)

:::

::::

:::

## {background-image="https://d33wubrfki0l68.cloudfront.net/1e7033393a2c70dc1255c5d0f1c563e945519251/61035/img/evol-ggplot/evol-ggplot-1.gif" background-size="contain"}

::: {.aside}

**Tutorial:** https://www.cedricscherer.com/2019/05/17/the-evolution-of-a-ggplot-ep.-1/

:::

## data-to-viz.com {background-iframe="https://www.data-to-viz.com/" background-interactive="true"}

# Homework Assignment {background-color="#0F4C81"}

## Submission

- All details in assignment week 11
- Due: Wednesday, 12th May at 23:59 (2 points)

## Evaluation

- 5 mins
- anonymous
- after each lecture

[https://forms.gle/HbCPbG9Yb7iDJ2jW6]()

# Programming {background-color="#0F4C81"}

## ae-11-data-visualisation

1. Open the file: `ae-11b-data-visualisation.qmd`
2. Work through the exercises
3. Use your sticky notes to indicate if you need support

```{r}

countdown(
  minutes = 30, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

# Thanks! `r emo::ji("sunflower")`  {background-color="#0F4C81"}

## 

Slides created via revealjs and Quarto: https://quarto.org/docs/presentations/revealjs/ 
Access slides as [PDF on GitHub](https://rbtl-fs22.github.io/website/slides/pt2-d11-data-visualisation/pt2-d11-data-visualisation.pdf)

All material is licensed under [Creative Commons Attribution Share Alike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/). 

