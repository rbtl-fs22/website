---
title: "rbtl - Data Visualisation"
author: "Lars Sch√∂bitz"
institute: "Global Health Engineering - ETH Zurich"
date: '
  `r Sys.Date()`'
format: 
  revealjs: 
    theme: [default, "../slides.scss"]
    chalkboard: true
editor: source
---

```{r}
#| child: "../setup.Rmd"
```

```{r}
library(ggplot2)
library(gapminder)
```

```{r}

gapminder_yr_2007 <- gapminder %>% 
  filter(year == 2007)

```

# Today

1. Solving coding problems
2. Homework questions
3. Exploratory Data Analysis with `ggplot2`
4. Working with branches in git
5. Live Coding Exercise
6. Programming Exercise
7. Homework

# Learning Objectives

1. Learners can describe the four main aesthetic mappings that can be used to visualise data using the ggplot2 R Package
2. Learners can control the colour scaling applied to a plot using colour as an aesthetic mapping
3. Learners can compare three different geoms and their use case
4. Learners can apply a theme to control font types and sizes within a plot

# Solving coding problems {background-color="#0F4C81"}

## Tipps for search engines 

- Use describe verbs that describe what you want to do
- Be specific
- Add R to the search query
- Add the name of the R package name to the search query
- Scroll through the top 5 results (don't just pick the first)

**Example: "How to remove a legend from a plot in R ggplot2"**

## Stack Overflow

::: {.incremental}

:::: {.columns}

::: {.column width="40%"}

**What is it?**

- The biggest support network for (coding) problems 
- Can be initimidating at first
- Upvote system 

:::

::: {.column width="60%"}

**Workflow**

- First, briefly read the question that was posted
- Then, read the answer marked as "correct"
- Then, read one or two more answers with high votes
- Then, check out the "Linked" posts 
- Always give credit for the solution

:::

::::

:::

## Give credit

![](img/stack-overflow-share-1.png)

## Give credit

![](img/stack-overflow-share-2.png)

## Give credit {.smaller}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "5-6"
ggplot(data = global_waste_data_kg_year,
       mapping = aes(x = income_id, 
                     y = capita_kg_year,
                     color = income_id)) +
  ## Remove legend ref: https://stackoverflow.com/a/35622358/6816220
  theme(legend.position = "none")

```

## Other sources for help

:::: {.columns}

::: {.column width="50%"}

- RStudio Community Forum: https://community.rstudio.com/
- Our rbtl Slack channel
- Documentation websites: https://dplyr.tidyverse.org/
- Twitter community: [#rstats](https://twitter.com/search?q=%23rstats&src=typd) 
:::

::: {.column width="50%"}

![](img/welcome_to_rstats_twitter.png)

:::

::::

::: aside
Artwork by [@allison_horst](https://www.allisonhorst.com/)
:::

## Minimal reproducible example (reprex)

- Needed when asking questions online
- We will practice this in another class
- Good support information: https://www.tidyverse.org/help/#reprex

## {background-image="img/code_hero.jpg" background-size="contain"}

::: aside
Artwork by [@allison_horst](https://www.allisonhorst.com/)
:::


# Live Coding Exercise {background-color="#0F4C81"}

## ae-10-data-science-lifecycle

1. Head over to the GitHub Organisation for the course.
2. Find the repo for week 10 that has your GitHub username.
3. Clone the repo with your username to the RStudio Cloud.
4. Open the file: `ae-10a-lifecycle.qmd`
5. Use your Sticky Notes to let me know when you are ready.





## Break

![](img/coffee-break.jpg)

```{r}

countdown(
  minutes = 10, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

::: aside
Photo by [Blake Wisz](https://unsplash.com/@blakewisz)
:::

# Exploratory Data Analysis with `ggplot2`

## R Package `ggplot2`

:::: {.columns}

::: {.column width="50%"}

- **ggplot2** is tidyverse's data visualization package 
- `gg` in `ggplot2` stands for Grammar of Graphics 
- Inspired by the book **Grammar of Graphics** by Leland Wilkinson
- **Documentation:** https://ggplot2.tidyverse.org/
- **Book**: https://ggplot2-book.org

:::

::: {.column width="50%"}

```{r}
knitr::include_graphics("img/ggplot2-part-of-tidyverse.png")
```

:::

::::

::: {.aside}

Slide adapted from datasciencebox.org

:::

## Code structure

- `ggplot()` is the main function in ggplot2
- Plots are constructed in layers
- Structure of the code for plots can be summarized as

```{r}
#| eval: false
#| echo: true

ggplot(data = [dataset], 
       mapping = aes(x = [x-variable], 
                     y = [y-variable])) +
   geom_xxx() +
   other options
```

### {auto-animate="true"}

```{r}
#| echo: true
ggplot()
```

## {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007)
```

## {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes()) 

```

## {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp))  

```

## {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp)) +
  geom_boxplot() 

```

## {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp)) +
  geom_boxplot() +
  theme_minimal()

```

## {auto-animate="true"}

```{r}
#| echo: true
ggplot(data = gapminder_yr_2007,
       mapping = aes(x = continent,
                     y = lifeExp)) +
  geom_boxplot() +
  theme_minimal(base_size = 14)

```

# Live Coding {background-color="#0F4C81"}

# Visualising numerical data {background-color="#0F4C81"}

## Types of variables

:::: {.columns}

::: {.column width="50%"}

### numerical

**discrete variables**

- non-negative
- whole numbers
- e.g. number of students, roll of a dice

**continuous variables**

- infinite number of values
- also dates and times
- e.g. length, weight, size 

:::

::: {.column width="50%"}

### non-numerical

**categorical variables**

- finite number of values 
- distinct groups (e.g. EU countries, continents)
- **ordinal** if levels have natural ordering (e.g. week days, school grades)

:::

::::

## {background-image="https://d33wubrfki0l68.cloudfront.net/1e7033393a2c70dc1255c5d0f1c563e945519251/61035/img/evol-ggplot/evol-ggplot-1.gif" background-size="contain"}

::: {.aside}

**Tutorial:** https://www.cedricscherer.com/2019/05/17/the-evolution-of-a-ggplot-ep.-1/

:::

# Programming {background-color="#0F4C81"}

## ae-11-data-visualisation

1. Open the file: `ae-10b-lifecycle.qmd`
2. Work through the exercises
3. Use your sticky notes to indicate if you need support

```{r}

countdown(
  minutes = 30, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```



# Homework Assignment {background-color="#0F4C81"}

## Submission

- All details in assignment week 10
- Due: Tuesday, 4th May at 23:59 (2 points)


# Thanks! `r emo::ji("sunflower")`  {background-color="#0F4C81"}

## 

Slides created via revealjs and Quarto: https://quarto.org/docs/presentations/revealjs/ 
Access slides as [PDF on GitHub](https://rbtl-fs22.github.io/website/slides/pt2-d02-tools/pt2-d02-tools.pdf)

All material is licensed under [Creative Commons Attribution Share Alike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/). 

# Templates {background-color="#0F4C81"}

## Background iFrame {background-iframe="https://rbtl-fs22.github.io/website/am-05-data-management.html"}

## Tabsets

::: {.panel-tabset}

### Tab A

Content for `Tab A`

### Tab B

Content for `Tab B`

:::

## Columns

:::: {.columns}

::: {.column width="40%"}

### Left column

```{r}
library(dplyr)
```

:::

::: {.column width="60%"}
### Right column

```{r}
print(mtcars)
```

:::

::::

## Code Animations

## {auto-animate="true"}

```r
# Fill in the spot we created for a plot
output$phonePlot <- renderPlot({
# Render a barplot
})
```

## {auto-animate=true}

```r
# Fill in the spot we created for a plot
output$phonePlot <- renderPlot({
# Render a barplot
barplot(WorldPhones[,input$region]*1000, 
main=input$region,
ylab="Number of Telephones",
xlab="Year")
})
```

# Preview Links

## Preview Links

[Preview](https://rbtl-fs22.github.io/website/){preview-link="true"}

# Break

![](img/coffee-break.jpg)

```{r}

countdown(
  minutes = 15, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

::: aside
Photo by [Blake Wisz](https://unsplash.com/@blakewisz)
:::