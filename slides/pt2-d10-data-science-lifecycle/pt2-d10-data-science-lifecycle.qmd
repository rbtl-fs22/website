---
title: "rbtl - Data Science Lifecycle"
author: "Lars Schöbitz"
institute: "Global Health Engineering - ETH Zurich"
date: '
  `r Sys.Date()`'
format: 
  revealjs: 
    theme: [default, "../slides.scss"]
    chalkboard: true
editor: source
---

```{r}
#| child: "../setup.Rmd"
```

```{r}
library(gapminder)
```

```{r data}

dat_link <- "https://raw.githubusercontent.com/Global-Health-Engineering/manuscript-hospital-air-quality/main/data/intermediate/malawi-hospitals-air-quality.csv"

# The following codee uses a function calles 'read_csv()' to read the data from 
# the link that is stored in the Object dat_link. The data is then stored in a 
# new object named 'dat_in'. After running the code, the name shows up in the   
# Environment pane in the top right of window 

dat_in <- read_csv(dat_link)

dat_in_sum_day <- dat_in %>% 
  filter(value <= 1000) %>% 
  mutate(date = lubridate::as_date(date_time)) %>% 
  group_by(date, location, indicator) %>% 
  summarise(min = min(value),
            median = median(value),
            mean = mean(value),
            sd = sd(value),
            max = max(value)) %>% 
  ungroup()

```

# Welcome back! {background-color="#0F4C81"}


## You got your data!

<div style="width:50%;height:0;padding-bottom:50%;position:relative;"><iframe src="https://giphy.com/embed/FSzLVme5Y3n3LMOiqP" width="50%" height="50%" style="position:absolute" frameBorder="0" class="giphy-embed" allowFullScreen></iframe></div><p><a href="https://giphy.com/gifs/data-spicy-FSzLVme5Y3n3LMOiqP">via GIPHY</a></p>

## What's happening next?

**Today**

1. Classroom tools
2. Data Science Lifecycle
3. R basics: Functions, Arguments, Objects, Operators
4. Live Coding Exercise
5. Pair Programming Exercise
6. Homework and Project Report

## Learning Objectives

1. Learners can import their data from a CSV file to a team repository on GitHub
2. Learners can list the six elements of the data science lifecycle
3. Learners know three different ways of getting support in solving coding problems online

# Classroom tools {background-color="#0F4C81"}

## Live Coding Exercises 

- Instructor writes and narrates code out loud 
- Intstructor explains elements and principles that are relevant
- Code is displayed on projector screen
- Learners join by writing and executing the same code
- Learners "code-along" with the instructor

## Pair Programming Exercises 

- Two learners work together on one computer
- One person (the driver) does the typing
- The other person (the navigator) offers comments and suggestions
- Roles get switched 

## Taking Notes Together

- Questions in shared online document: https://docs.google.com/document/d/1B_fGhU2-p7GdMjDdRq73JXAhAM7VU2JDu6t1foSQ0og/edit

## Sticky Notes 

- Use as status flags
- **Orange:** Exercise completed
- **Pink:** Problem, need support

# Data Science Lifecycle {background-color="#0F4C81"}

## Deep End

<div style="width:100%;height:0;padding-bottom:56%;position:relative;"><iframe src="https://giphy.com/embed/3pWRgRw86JyBa" width="75%" height="75%" style="position:absolute" frameBorder="0" class="giphy-embed" allowFullScreen></iframe></div><p><a href="https://giphy.com/gifs/matthew-west-all-in-matthew-west-3pWRgRw86JyBa">via GIPHY</a></p>

## 1 {background-image="img/data-science-lifecycle/data-science-lifecycle.001.png" background-size="contain"}

::: {.notes}

Add notes

:::

## 2 {background-image="img/data-science-lifecycle/data-science-lifecycle.002.png" background-size="contain"}

::: {.notes}

1. First you must import your data into R. This typically means that you take data stored:

- in a file
- in a database, 
- or web application, and load it into R. 

2. If you can get your data into R, you can  do data science on it!

:::

## 3 {background-image="img/data-science-lifecycle/data-science-lifecycle.003.png" background-size="contain"}

::: {.notes}

1. Once you’ve imported your data, it is a good idea to tidy it. 

2. This means to get it into a structure that lets you focus on the questions about your data and not the format it needs to be in

3. This is the step where we spend by far the biggest amount of our time. 

4. It has been estimated that we spend about 80% of our time with cleaning and tidying data, so that we can use it fo our analyses.

5. In my courses you will learn how to structure your data in a tidy format as you collect it, and before you import it. A highly underestimated skill.

:::

## 4 {background-image="img/data-science-lifecycle/data-science-lifecycle.004.png" background-size="contain"}

::: {.notes}

1. Once your data is tidy, a common first step is to transform it.

2. This includes 
  - narrowing in on what interests you (like all people without toilets in one district, or all data from last year)
  - creating new variables from existing (like toilet density, as in number of people per toilet) 
  - calculating summary statistics (like counts or the mean)
  
Together, tidying and transforming are called wrangling, because getting your data in a form that’s natural to work with often feels like a fight!

:::

## 5 {background-image="img/data-science-lifecycle/data-science-lifecycle.005.png" background-size="contain"}

::: {.notes}

1. Once you have tidy data with the variables you need, there are two main engines of knowledge generation: 

- visualisation 
- and modelling. 

2. These have complementary strengths and weaknesses so any real analysis will iterate between them many times.

3. Visualisation is a fundamentally human activity. A good visualisation will show you things that you did not expect, or raise new questions about the data.

:::

## 6 {background-image="img/data-science-lifecycle/data-science-lifecycle.006.png" background-size="contain"}

::: {.notes}

1. Models are complementary tools to visualisation. Once you have made your questions sufficiently precise, you can use a model to answer them.

2. In my courses, they play a very small part, but I am confident that you will be able to enhance your knowledge on modelling once you understand the basic principles of using the R lanuage.

:::

## 7 {background-image="img/data-science-lifecycle/data-science-lifecycle.007.png" background-size="contain"}

::: {.notes}

1. The last step of data science is communication, an absolutely critical part of any data analysis project. 

2. It doesn’t matter how well your models and visualisation have led you to understand the data, unless you can also communicate your results to others.

3. And this is a part where R has become really strong.

:::

# R {background-color="#0F4C81"}

## Packages {auto-animate="true"}

::: {.incremental}

:::: {.columns}

::: {.column width="40%"}

**base R**

```{r}
#| eval: false
#| echo: true
sqrt(49)
sum(1, 2)
```

- Functions come with R

:::

::: {.column width="5%"}

:::

::: {.column width="55%"}

**R Packages**

```{r}
#| eval: false
#| echo: true
library(dplyr)

```

- Installed once in the Console: `install.packages("dplyr")`
- Loaded per script

:::

::::

:::

::: {.notes}

Packages

- Main way that reusable code is shared in R
- Combination of code, data, and documentation
- R has a rich ecosystem of packages for data manipulation & analysis

:::

## Functions & Arguments {auto-animate="true"}

```{r}
#| code-line-numbers: "3-4"
#| eval: false
#| echo: true
library(dplyr)

filter(.data = gapminder, 
       year == 2007)
```

- Function: `filter()`
- Argument: `.data = ` 
- Arguments following: `year == 2007` **What do do with the data**

## Objects {auto-animate="true"}

```{r}
#| eval: false
#| code-line-numbers: "3-4"
#| echo: true
library(dplyr)

gapminder_yr_2007 <- filter(.data = gapminder, 
       year == 2007)
```

- Function: `filter()`
- Argument: `.data = `
- Arguments following: `year == 2007` **What do do with the data**
- Object: `gapminder_yr_2007`

## Operators {auto-animate="true"}

```{r}
#| eval: false
#| code-line-numbers: "3-4"
#| echo: true
library(dplyr)

gapminder_yr_2007 <- gapminder %>% 
  filter(year == 2007) 
```

- Function: `filter()`
- Argument: `.data = `
- Arguments following: `year == 2007` **What do do with the data**
- Object: `gapminder_yr_2007`
- Assignment operator: `<-`
- Pipe operator: `%<%`

## Rules

Rules of `dplyr` functions:

::: {.incremental}

- First argument is always a data frame
- Subsequent arguments say what to do with that data frame
- Always return a data frame  
- Don't modify in place 

:::

# Live Coding Exercise {background-color="#0F4C81"}

## ae-10-data-science-lifecycle

1. Head over to the GitHub Organisation for the course.
2. Find the repo for week 10 that has your GitHub username.
3. Clone the repo with your username to the RStudio Cloud.
4. Open the file: `ae-10a-lifecycle.qmd`
5. Use your Sticky Notes to let me know when you are ready.

## Break

![](img/coffee-break.jpg)

```{r}

countdown(
  minutes = 15, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

::: aside
Photo by [Blake Wisz](https://unsplash.com/@blakewisz)
:::

# Solving coding problems

## Tipps for search engines

- Use describe verbs that describe what you want to do
- Be specific
- Add R to the search query
- Add the name of the R package name to the search query
- Scroll through the top 5 results (don't just pick the first)

**Example: "How to remove a legend from a plot in R ggplot2"**

## Stack Overflow

::: {.incremental}

:::: {.columns}

::: {.column width="40%"}

**What is it?**

- The biggest support network for (coding) problems 
- Can be initimidating at first
- Upvote system 

:::

::: {.column width="60%"}

**Workflow**

- First, briefly read the question that was posted
- Then, read the answer marked as "correct"
- Then, read one or two more answers with high votes
- Then, check out the "Linked" posts 
- Always give credit for the solution

:::

::::

:::

## Give credit

![](img/stack-overflow-share-1.png)

## Give credit

![](img/stack-overflow-share-2.png)

## Give credit {.smaller}

```{r}
#| eval: false
#| echo: true
#| code-line-numbers: "5-6"
ggplot(data = global_waste_data_kg_year,
       mapping = aes(x = income_id, 
                     y = capita_kg_year,
                     color = income_id)) +
  ## Remove legend ref: https://stackoverflow.com/a/35622358/6816220
  theme(legend.position = "none")

```

## Other sources for help

:::: {.columns}

::: {.column width="50%"}

- RStudio Community Forum: https://community.rstudio.com/
- Our rbtl Slack channel
- Documentation websites: https://dplyr.tidyverse.org/
- Twitter community: [#rstats](https://twitter.com/search?q=%23rstats&src=typd) 
:::

::: {.column width="50%"}

![](img/welcome_to_rstats_twitter.png)

:::

::::

::: aside
Artwork by [@allison_horst](https://www.allisonhorst.com/)
:::

## Minimal reproducible example (reprex)

- Needed when asking questions online
- We will practice this in another class
- Good support information: https://www.tidyverse.org/help/#reprex

## {background-image="img/code_hero.jpg" background-size="contain"}

::: aside
Artwork by [@allison_horst](https://www.allisonhorst.com/)
:::

## Break

![](img/coffee-break.jpg)

```{r}

countdown(
  minutes = 10, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

::: aside
Photo by [Blake Wisz](https://unsplash.com/@blakewisz)
:::

# Pair Programming {background-color="#0F4C81"}

## ae-10-data-science-lifecycle

1. Team up in pairs
2. Decide who writes code, and who supports without writing code
3. Open the file: `ae-10b-lifecycle.qmd`
4. Work through the exercises
5. Use your sticky notes to indicate if you need support

```{r}

countdown(
  minutes = 30, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

# Homework Assignment {background-color="#0F4C81"}

## Teams on GitHub 

![](img/gh-teams-01.png)

## Teams on GitHub 

![](img/gh-teams-02.png)

## Teams on GitHub 

![](img/gh-teams-03.png)

## Research Project Template

- Report template
- Complete list of items for grading (also as [open Google Sheet](https://docs.google.com/spreadsheets/d/1l4rffWN2dSv-q_avSzYCUoFeExl8ben2JenNHHE-HN8/edit#gid=0))
- Information on intentions for publishing

## Discuss and decide

- **Data:** Who will upload which data as part of the homework?
- **Results & Discussion:** 
  - Who writes in file:
    - `03-01-results.qmd`?
    - `03-02-results.qmd`?
    - `03-03-results.qmd`?

```{r}

countdown(
  minutes = 3, seconds = 0,
  left = 0, right = 0,
  padding = "10px", margin = "5%",
  font_size = "2em"
)

```

## Submission

- All details in assignment week 10
- Due: Tuesday, 3rd May at 23:59 (2 points)


# Thanks! `r emo::ji("sunflower")`  {background-color="#0F4C81"}

## 

Slides created via revealjs and Quarto: https://quarto.org/docs/presentations/revealjs/ 
Access slides as [PDF on GitHub](https://rbtl-fs22.github.io/website/slides/pt2-d02-tools/pt2-d02-tools.pdf)

All material is licensed under [Creative Commons Attribution Share Alike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/). 
